# Copyright 2024 Cloudera, Inc.
# 
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
#     http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---

- name: Gather network details for all hosts
  ansible.builtin.setup:
    gather_subset: network
  delegate_to: "{{ item }}"
  delegate_facts: true
  loop: "{{ groups['all'] }}"

- name: Set hostname
  ansible.builtin.hostname:
    name: "{{ inventory_hostname }}"

- name: Install dnsmasq service
  ansible.builtin.package:
    name:
      - dnsmasq
      - bind-utils
    state: latest

- name: Set host entry
  ansible.builtin.blockinfile:
    path: /etc/hosts
    backup: yes
    # block: "{{ ansible_default_ipv4.address }} {{ inventory_hostname }}"
    block: "{{ groups['all'] | map('extract', hostvars) | map(attribute='ansible_default_ipv4') | map(attribute='address') | zip(groups['all']) | map('join', ' ') | join('\n') }}"
  register: __hosts

- name: Set dnsmasq configuration
  ansible.builtin.blockinfile:
    path: /etc/dnsmasq.conf
    backup: yes
    block: |
      domain-needed
      bogus-priv
      no-resolv
      {{ servers }}
      {{ addresses | default(omit) }}
      {{ krb_srv | default(omit) }}
      {{ kpasswd_srv | default(omit) }}
      {{ ldap_srv | default(omit) }}
      {{ krb_uri | default(omit) }}
  vars:
    servers: "{{ ['server='] | product(dnsmasq_upstream_nameservers | list) | map('join', '') | join('\n') }}"
    addresses: "{{ ['address='] | product(dnsmasq_address_map | dict2items | map(attribute='key')) | map('join', '/') | zip(dnsmasq_address_map | dict2items | map(attribute='value')) | map('join', '/') | join('\n') }}"
    krb_srv: "{{ ['srv-host=_kerberos', 'srv-host=_kerberos-master'] | product(['_tcp', '_udp']) | product([dnsmasq_realm]) | map('flatten') | map('join', '.') | product(dnsmasq_kerberos_servers) | product(['88']) | map('flatten') | map('join', ',') | join('\n') }}"
    kpasswd_srv: "{{ ['srv-host=_kpasswd'] | product(['_tcp', '_udp']) | product([dnsmasq_realm]) | map('flatten') | map('join', '.') | product(dnsmasq_kerberos_servers) | product(['464']) | map('flatten') | map('join', ',') | join('\n') }}"
    ldap_srv: "{{ ['srv-host=_ldap._tcp.' + dnsmasq_realm] | product(dnsmasq_kerberos_servers) | map('join', ',') | product(['389']) | map('join', ',') | join('\n') }}"  
    krb_uri: "{{ ['dns-rr=_kerberos', 'dns-rr=_kpasswd'] | product([dnsmasq_realm]) | map('join', '.') | product(['256']) | map('join', ',') | product(['krb5srv:m'] | product(['tcp','udp']) | product(dnsmasq_kerberos_servers) | map('flatten') | map('join', ':') | product(['.']) | map('join') | map('cloudera.exe.to_dns_value') | list) | map('join', ',') | join('\n') }}"
    
    # srv-host=_ldap._tcp.cldr.deployment,test06-freeipa-01.18-191-128-246.pvc.cloudera-labs.com,389
    # srv-host=_kerberos._tcp.cldr.deployment,test06-freeipa-01.18-191-128-246.pvc.cloudera-labs.com,88
    # srv-host=_kerberos._udp.cldr.deployment,test06-freeipa-01.18-191-128-246.pvc.cloudera-labs.com,88
    # srv-host=_kerberos-master._tcp.cldr.deployment,test06-freeipa-01.18-191-128-246.pvc.cloudera-labs.com,88
    # srv-host=_kerberos-master._udp.cldr.deployment,test06-freeipa-01.18-191-128-246.pvc.cloudera-labs.com,88
    # srv-host=_kpasswd._tcp.cldr.deployment,test06-freeipa-01.18-191-128-246.pvc.cloudera-labs.com,464
    # srv-host=_kpasswd._udp.cldr.deployment,test06-freeipa-01.18-191-128-246.pvc.cloudera-labs.com,464  
    
    # _kerberos.cldr.deployment.:krb5srv:m:tcp:test06-freeipa-01.18-191-128-246.pvc.cloudera-labs.com.
    # dns-rr=_kerberos.cldr.deployment,256,000a00016b7262357372763a6d3a7463703a7465737430362d667265656970612d30312e31382d3139312d3132382d3234362e7076632e636c6f75646572612d6c6162732e636f6d2e
    # _kerberos.cldr.deployment.:krb5srv:m:tcp:test06-freeipa-01.18-191-128-246.pvc.cloudera-labs.com.
    # _kerberos.cldr.deployment.:krb5srv:m:udp:test06-freeipa-01.18-191-128-246.pvc.cloudera-labs.com.
    # _kpasswd.cldr.deployment.:krb5srv:m:tcp:test06-freeipa-01.18-191-128-246.pvc.cloudera-labs.com.
    # _kpasswd.cldr.deployment.:krb5srv:m:udp:test06-freeipa-01.18-191-128-246.pvc.cloudera-labs.com.

  register: __dnsmasq_config

- name: Ensure dnsmasq service is running
  when: __dnsmasq_config.changed or __hosts.changed
  ansible.builtin.service:
    name: dnsmasq
    enabled: yes
    state: restarted

- name: Set DNS resolver to use dnsmasq
  community.general.nmcli:
    conn_name: "System {{ ansible_default_ipv4['interface'] }}"
    type: ethernet
    dns4: "127.0.0.1"
    state: present
  register: __netmgr

- name: Restart Network Manager
  when: __netmgr.changed
  ansible.builtin.service:
    name: NetworkManager
    state: restarted
